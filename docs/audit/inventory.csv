module,file,issue,proposed DTO/Presenter,migration target,owner,ETA,risk,notes
Events,backend\src\Entity\Event.php,Serialization Groups (:read) in Entity; presentation leak,EventDetailsResponse/EventListItemResponse + EventPresenter,Remove Groups from entity; map via Presenter,team,1d,M,Many properties annotated
Tickets,backend\src\Entity\Ticket.php,Serialization Groups (:read) in Entity; presentation leak,TicketResponse + TicketPresenter,Remove Groups from entity; map via Presenter,team,1d,M,Expose only safe fields
Users,backend\src\Entity\User.php,Serialization Groups (:read) in Entity; presentation leak,UserPublicDTO + UserPresenter,Remove Groups from entity; map via Presenter,team,0.5d,M,Sensitive data must not leak
Orders,backend\src\Entity\Order.php,Serialization Groups (:read) in Entity; presentation leak,OrderResponse + OrderPresenter,Remove Groups from entity; map via Presenter,team,1d,M,Align with OrderItem DTO
Orders,backend\src\Entity\OrderItem.php,Serialization Groups (:read) in Entity; presentation leak,OrderItemResponse + OrderPresenter,Remove Groups from entity; map via Presenter,team,0.5d,M,Part of Order aggregate
Events,backend\src\Entity\TicketType.php,Serialization Groups (:read) in Entity; presentation leak,TicketTypeDTO,Remove Groups from entity; map via Presenter,team,0.5d,L,Used inside Event presenters
API,backend\src\Controller\Api\EventController.php,Controller returns arrays via $this->json; no DTO/Presenter,EventDetailsResponse/EventListItemResponse + EventPresenter,Refactor to Presenter/DTO; use Query/Command handlers,team,2d,M,Cover cancel/statistics endpoints
API,backend\src\Controller\Api\TicketController.php,Controller returns arrays; uses legacy service; no DTO,TicketPurchaseResponse/TicketsListResponse + TicketPresenter,Switch to TicketApplicationService/CQRS; add missing handlers,team,3d,H,Purchase/my/cancel endpoints
API,backend\src\Controller\AuthController.php,Returns arrays from ApplicationService; no DTO,UserPublicDTO/UserProfileDTO + UserPresenter,Introduce Presenter + DTO,team,1d,M,Ensure no password in responses
Admin,backend\src\Controller\Admin\CacheController.php,Returns raw arrays; no DTO,CacheStatsDTO,Optionally introduce DTO for stability,team,0.5d,L,Low risk
Legacy,backend\src\Service\TicketService.php,Legacy service duplicate; remove after migration,N/A,Migrate controllers to TicketApplicationService then delete,team,1d,M,Blocks DDD adoption
Legacy,backend\src\Service\EventService.php,Legacy service duplicate; remove after migration,N/A,Migrate controllers to Application/CQRS then delete,team,1d,M,Overlap with EventApplicationService
Legacy,backend\src\Service\PaymentService.php,Legacy service duplicate; remove after migration,N/A,Use PaymentApplicationService/Handlers; then delete,team,1d,M,Align with CQRS
Legacy,backend\src\Service\AuthService.php,Legacy service duplicate; remove after migration,N/A,Auth via Application layer; then delete,team,0.5d,M,Not needed
API Platform,backend\src\State\EventStateProcessor.php,Processor without explicit Response DTO,Ensure output uses Response DTO/Presenter,Adopt Presenter + DTO in process(),team,0.5d,L,Consistency with plan
DTO,backend\src\DTO\EventFiltersDTO.php,toArray() used in controller; coupling to controller,Replace with Request DTO bound to route/validation,Update controller to use Request DTO,team,0.5d,L,Simplify mapping
