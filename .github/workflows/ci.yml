name: CI

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: eventhub_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U test_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      redis:
        image: redis:7-alpine
        ports:
          - 6380:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10

      rabbitmq:
        image: rabbitmq:3-management-alpine
        env:
          RABBITMQ_DEFAULT_USER: test_user
          RABBITMQ_DEFAULT_PASS: test_pass
        ports:
          - 5673:5672
          - 15673:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    env:
      APP_ENV: test
      DATABASE_URL: postgresql://test_user:test_pass@localhost:5433/eventhub_test
      REDIS_URL: redis://localhost:6380
      RABBITMQ_HOST: localhost
      RABBITMQ_PORT: 5673
      RABBITMQ_USER: test_user
      RABBITMQ_PASSWORD: test_pass
      RABBITMQ_DSN: amqp://test_user:test_pass@localhost:5673/%2f
      JWT_PASSPHRASE: dev-test-jwt

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: xdebug
          tools: composer
          extensions: mbstring, iconv, redis, amqp

      - name: Configure Composer GitHub token
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: composer config -g github-oauth.github.com "$GITHUB_TOKEN"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(cd backend && composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Validate composer.json
        run: cd backend && composer validate --no-check-publish

      - name: Install dependencies
        run: cd backend && composer install --no-interaction --no-progress --prefer-dist
        env:
          COMPOSER_PROCESS_TIMEOUT: 0
          COMPOSER_NO_INTERACTION: 1
          COMPOSER_NO_AUDIT: 1

      - name: Install netcat for service checks
        run: sudo apt-get update && sudo apt-get install -y netcat-openbsd

      - name: Wait for services
        run: |
          echo "Waiting for PostgreSQL..."
          for i in {1..30}; do nc -z localhost 5433 && echo "PostgreSQL ready" && break || sleep 2; done
          echo "Waiting for Redis..."
          for i in {1..30}; do nc -z localhost 6380 && echo "Redis ready" && break || sleep 2; done
          echo "Waiting for RabbitMQ..."
          for i in {1..30}; do nc -z localhost 5673 && echo "RabbitMQ ready" && break || sleep 2; done

      - name: Generate JWT keys
        run: cd backend && php bin/console lexik:jwt:generate-keypair --skip-if-exists --env=test

      - name: Prepare test database
        run: |
          cd backend
          php bin/console doctrine:database:create --if-not-exists --env=test
          php bin/console doctrine:migrations:migrate --no-interaction --env=test
          if [ -d src/DataFixtures ]; then php bin/console doctrine:fixtures:load --no-interaction --env=test || true; fi

      - name: Setup message transports
        run: cd backend && php bin/console messenger:setup-transports --env=test

      - name: Run PHPUnit with coverage
        run: cd backend && SYMFONY_DEPRECATIONS_HELPER=max[direct]=0 vendor/bin/phpunit --coverage-clover coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: backend/coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            backend/var/log/
            backend/var/cache/test/
          retention-days: 7

  static-analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: tests

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: composer

      - name: Configure Composer GitHub token
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: composer config -g github-oauth.github.com "$GITHUB_TOKEN"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(cd backend && composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: cd backend && composer install --no-interaction --no-progress --prefer-dist
        env:
          COMPOSER_PROCESS_TIMEOUT: 0
          COMPOSER_NO_INTERACTION: 1
          COMPOSER_NO_AUDIT: 1

      - name: Run PHPStan
        run: cd backend && vendor/bin/phpstan analyse -c phpstan.neon

      - name: Rector dry-run
        run: |
          cd backend
          if [ -x vendor/bin/rector ]; then 
            vendor/bin/rector process --dry-run -c ../rector.php
          else 
            echo "Rector not installed, skipping..."
          fi
        continue-on-error: true

  architecture:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: tests

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: composer

      - name: Configure Composer GitHub token
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: composer config -g github-oauth.github.com "$GITHUB_TOKEN"

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(cd backend && composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('backend/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: cd backend && composer install --no-interaction --no-progress --prefer-dist
        env:
          COMPOSER_PROCESS_TIMEOUT: 0
          COMPOSER_NO_INTERACTION: 1
          COMPOSER_NO_AUDIT: 1

      - name: Run Deptrac
        run: |
          cd backend
          if [ -x vendor/bin/deptrac ] && [ -f "$GITHUB_WORKSPACE/deptrac.yaml" ]; then
            vendor/bin/deptrac analyze --config-file=$GITHUB_WORKSPACE/deptrac.yaml \
            || vendor/bin/deptrac analyse --config-file=$GITHUB_WORKSPACE/deptrac.yaml \
            || vendor/bin/deptrac --config-file=$GITHUB_WORKSPACE/deptrac.yaml \
            || vendor/bin/deptrac --config=$GITHUB_WORKSPACE/deptrac.yaml \
            || echo "::warning::Deptrac analysis failed but continuing"
          else
            echo "Deptrac skipped (binary or config missing)"
          fi
        continue-on-error: true