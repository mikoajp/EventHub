name: CI

on: [push, pull_request]

jobs:
  php:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: eventhub_test
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_pass
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U test_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

      redis:
        image: redis:7-alpine
        ports:
          - 6380:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10

      rabbitmq:
        image: rabbitmq:3-management-alpine
        env:
          RABBITMQ_DEFAULT_USER: test_user
          RABBITMQ_DEFAULT_PASS: test_pass
        ports:
          - 5673:5672
          - 15673:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
    env:
      APP_ENV: test
      DATABASE_URL: postgresql://test_user:test_pass@localhost:5433/eventhub_test
      REDIS_URL: redis://localhost:6380
      RABBITMQ_HOST: localhost
      RABBITMQ_PORT: 5673
      RABBITMQ_USER: test_user
      RABBITMQ_PASSWORD: test_pass
      RABBITMQ_DSN: amqp://test_user:test_pass@localhost:5673/%2f
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          coverage: none
          tools: composer
          extensions: mbstring, iconv, redis, amqp

      - name: Configure Composer GitHub token
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: composer config -g github-oauth.github.com "$GITHUB_TOKEN"



      - name: Validate composer.json
        run: cd backend && composer validate --no-check-publish

      - name: Install dependencies
        run: cd backend && composer install --no-interaction --no-progress --prefer-dist

      - name: Wait for services
        run: |
          for i in {1..60}; do nc -z localhost 5433 && break; sleep 1; done
          for i in {1..60}; do nc -z localhost 6380 && break; sleep 1; done
          for i in {1..60}; do nc -z localhost 5673 && break; sleep 1; done
      
      - name: Prepare test database
        run: |
          cd backend
          php bin/console doctrine:database:create --if-not-exists --env=test
          php bin/console doctrine:schema:update --force --env=test

      - name: Run PHPUnit (All Tests)
        run: cd backend && SYMFONY_DEPRECATIONS_HELPER=weak vendor/bin/phpunit
        

      - name: Run PHPStan
        run: cd backend && vendor/bin/phpstan analyse -c phpstan.neon

      - name: Deptrac (non-blocking if present)
        run: |
          cd backend
          if [ -x vendor/bin/deptrac ] && [ -f "$GITHUB_WORKSPACE/deptrac.yaml" ]; then \
            vendor/bin/deptrac analyze --config-file=$GITHUB_WORKSPACE/deptrac.yaml \
            || vendor/bin/deptrac analyse --config-file=$GITHUB_WORKSPACE/deptrac.yaml \
            || vendor/bin/deptrac --config-file=$GITHUB_WORKSPACE/deptrac.yaml \
            || vendor/bin/deptrac --config=$GITHUB_WORKSPACE/deptrac.yaml \
            || echo "Deptrac failed (non-blocking)"; \
          else \
            echo "Deptrac skipped (binary or config missing)"; \
          fi

      - name: Rector dry-run (if available)
        run: |
          cd backend
          if [ -x vendor/bin/rector ]; then vendor/bin/rector process --dry-run -c ../rector.php; else echo "rector not installed"; fi

