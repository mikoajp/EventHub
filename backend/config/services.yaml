# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    rabbitmq.host: '%env(RABBITMQ_HOST)%'
    rabbitmq.port: '%env(int:RABBITMQ_PORT)%'
    rabbitmq.user: '%env(RABBITMQ_USER)%'
    rabbitmq.password: '%env(RABBITMQ_PASSWORD)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Infrastructure Services
    App\Infrastructure\Cache\CacheInterface:
        alias: App\Infrastructure\Cache\RedisCacheAdapter

    App\Infrastructure\Cache\RedisCacheAdapter:
        arguments:
            $redisUrl: '%env(REDIS_URL)%'
            $cacheEnabled: true


    App\Infrastructure\Email\EmailServiceInterface:
        alias: App\Infrastructure\Email\SymfonyMailerAdapter

    App\Infrastructure\Email\SymfonyMailerAdapter:
        arguments:
            $fromEmail: '%env(FROM_EMAIL)%'

    # Payment Infrastructure
    App\Infrastructure\Payment\PaymentGatewayInterface:
        alias: App\Infrastructure\Payment\StripePaymentGateway

    # Messaging Infrastructure
    App\Infrastructure\Messaging\MessageBusInterface:
        alias: App\Infrastructure\Messaging\NullMessageBus


    # Validation Infrastructure
    App\Infrastructure\Validation\RequestValidatorInterface:
        alias: App\Infrastructure\Validation\SymfonyRequestValidator

    # NotificationService - uses autowiring
    # App\Service\NotificationService: (autowired by default)

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
